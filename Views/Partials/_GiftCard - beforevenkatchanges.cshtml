@inherits UmbracoViewPage<ScottybonsMVC.Models.PageViewModels.GiftCardPageViewModel>

<div class="order-gift-card-main container">
    <input type="hidden" class="loggedin-user" value="@Model.IsLoggedIn.ToString()" />
    <input type="hidden" class="loggedin-user-email" value="@Model.LoggedUserEmaild" />

    <div class="order-gift-card-content">
        @if (!Model.IsOrder)
        {
            <div class="add-gift-cards-section gift-card-wizard">
                <div class="order-gift-card-header row">
                    <h2 class="text-uppercase">ORDER A GIFT CARD</h2>
                    <h3>You can buy several gift cards simultaneously, but each order only one delivery address</h3>
                </div>
                <div class="row col-sm-12 gc-error-header">
                    <div class="col-sm-3"></div>
                    <div class="col-sm-6">
                        <label class="gcfields-required-error" style="display:none">Please check the madatory fields below.</label>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="col-sm-3">

                        </div>
                        <div class="col-sm-6">
                            <div class="gift-cards-section">
                            </div>
                            <div class="add-gift-card">
                                <div class="row add-gift-card-note col-sm-12">
                                    <p>
                                        You can multiple entities who buy gift cards at a time, but only specify a delivery address per order
                                    </p>
                                </div>
                                <div class="row add-gift-card-ctrls col-sm-12">
                                    <div>
                                        <div class="col-sm-11">
                                            <label class="lbl-want-order"><input type="checkbox" class="chk-want-order" onclick="AddGiftCard(this)" />I want to order a gift card</label>
                                        </div>
                                        <div class="col-sm-1">
                                            <button type="button" class="btn btn-primary btn-wizard-next btn-add-gift-card" style="display:none;" onclick="ProceedToLoginOrAddress(this)">Next</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">

                        </div>
                    </div>
                </div>
            </div>

            if (!Model.IsLoggedIn)
            {
                <div class="login-gift-card-section gift-card-wizard" style="display:none">

                    <div class="order-gift-card-header row">
                        <h2 class="text-uppercase">PERSONAL INFORMATION</h2>
                        <h3>SubTtile</h3>
                    </div>

                    <div class="row">
                        <div class="col-sm-12">
                            <div class="col-sm-1">

                            </div>
                            <div class="col-sm-10">
                                <div class="col-sm-6 gift-card-login gift-card-login-container">
                                    <h3>LOG</h3>
                                    <h5>
                                        Please enter your email address and password, and your saved data is retrieved.
                                    </h5>
                                    <div class="row col-sm-12 gc-error-header">
                                        <label class="gc-login-required-error" style="display:none">Please provide the email and password.</label>
                                        <label class="gc-login-valid-error" style="display:none">Please enter valid email.</label>
                                    </div>
                                    <div class="row gift-card-login-fields">
                                        <div class="col-sm-4 no-padding">
                                            <label>Email Address</label>
                                        </div>
                                        <div class="col-sm-8 no-padding">
                                            <input type="text" class="form-control gc-emailaddress gift-card-login-emailaddress" placeholder="Email" />
                                        </div>
                                    </div>
                                    <div class="row gift-card-login-fields">
                                        <div class="col-sm-4 no-padding">
                                            <label>Password</label>
                                        </div>
                                        <div class="col-sm-8 no-padding">
                                            <input type="password" class="form-control gc-password gift-card-login-pwd" placeholder="Password" />
                                        </div>
                                    </div>
                                    <div class="row gift-card-login-fields">
                                        <div class="col-sm-4">
                                        </div>
                                        <div class="col-sm-8 gift-card-btn-address-them">
                                            <button class="btn btn-default btn-address-them" onclick="ProceedToDelivery(this);">TO ADDRESS THEM</button>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-1"></div>
                                <div class="col-sm-5 gift-card-login gift-card-login-guest-container">
                                    <h3>ORDER AS A GUEST</h3>
                                    <h5>
                                        It is not mandatory to create an account.
                                    </h5>
                                    <div class="row col-sm-12 gc-error-header">
                                        <label class="gc-loginguest-required-error" style="display:none">Please provide the email.</label>
                                        <label class="gc-loginguest-valid-error" style="display:none">Please enter valid email.</label>
                                    </div>
                                    <div class="row gift-card-login-guest-fields">
                                        <div class="col-sm-4 no-padding">
                                            <label>Email Address</label>
                                        </div>
                                        <div class="col-sm-8 no-padding">
                                            <input type="text" class="form-control gc-emailaddress gift-card-login-guest-emailaddress" placeholder="Email" />
                                        </div>
                                    </div>
                                    <div class="row gift-card-login-guest-fields">
                                        <div class="col-sm-4">
                                        </div>
                                        <div class="col-sm-8 gift-card-guest-btn-address-them">
                                            <button class="btn btn-default btn-guest-address-them" onclick="ProceedToDeliveryAsGuest(this);">TO ADDRESS THEM</button>
                                        </div>
                                    </div>
                                </div>
                                <div class="row col-sm-12 back-next-wizard">
                                    <button type="button" class="btn btn-primary btn-wizard-back btn-back-gift-card" onclick="BackToWizard(this)">Back</button>
                                </div>
                            </div>
                            <div class="col-sm-3">

                            </div>
                        </div>
                    </div>
                </div>
            }

            <div class="order-gift-card-address gift-card-wizard" style="display:none">
                <div class="order-gift-card-header row">
                    <h2 class="text-uppercase">DELIVERY</h2>
                    <h3>SubTtile</h3>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="col-sm-1">

                        </div>
                        <div class="col-sm-7">
                            <div class="row col-sm-12 gc-error-header">
                                <label class="gc-addr-required-error" style="display:none">Please check the madatory fields below.</label>
                            </div>
                            <div class="row col-sm-12 gc-name-header">
                                <label>YOUR NAME</label>
                            </div>
                            <div class="row gc-addr-name">
                                <div class="col-sm-6">
                                    <input type="text" class="form-control gc-payersaddr-firstname gc-deladdr-field" placeholder="First Name" />
                                </div>
                                <div class="col-sm-6">
                                    <input type="text" class="form-control gc-payersaddr-lastname gc-deladdr-field" placeholder="Last Name" />
                                </div>
                            </div>

                            <div class="row col-sm-12 gc-deladdr-header">
                                <label>DELIVERY ADDRESS</label>
                            </div>

                            <div class="row gc-deladdr-flastname">
                                <div class="col-sm-6">
                                    <input type="text" class="form-control gc-addr-deladd-firstname gc-deladdr-field" placeholder="First Name" />
                                </div>
                                <div class="col-sm-6">
                                    <input type="text" class="form-control gc-addr-deladd-lastname gc-deladdr-field" placeholder="Last Name" />
                                </div>
                            </div>

                            <div class="row gc-deladdr-street-hnumber">
                                <div class="col-sm-8">
                                    <input type="text" class="form-control gc-addr-streetname gc-deladdr-field" placeholder="Street Name" />
                                </div>
                                <div class="col-sm-4">
                                    <input type="text" class="form-control gc-addr-housenumber gc-deladdr-field" placeholder="House Number" />
                                </div>
                            </div>
                            <div class="row gc-deladdr-post-city">
                                <div class="col-sm-4">
                                    <input type="text" class="form-control gc-addr-post gc-deladdr-field" placeholder="Zip Code" />
                                </div>
                                <div class="col-sm-8">
                                    <input type="text" class="form-control gc-addr-city gc-deladdr-field" placeholder="City" />
                                </div>
                            </div>
                            <div class="row gc-deladdr-country">
                                <div class="col-sm-8">
                                    @Html.DropDownList("gccountry", (List<SelectListItem>)ViewBag.Country, new { @class = "form-control gc-addr-country gc-deladdr-field" })
                                    @*<input type="text" class="form-control gc-addr-country gc-deladdr-field" placeholder="Country" />*@
                                </div>
                            </div>
                            <div class="row gc-deladdr-order-action back-next-wizard">
                                <div class="col-sm-4">
                                    <button type="button" class="btn btn-primary btn-wizard-back float-left" onclick="BackToWizard(this)">Back</button>
                                </div>
                                <div class="col-sm-8">
                                    <button class="btn btn-default btn-guest-address-them btn-gc-deladdr-order float-right" onclick="ProceedToPayment(this);">ORDER</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="order-gift-card-payment gift-card-wizard" style="display:@(Model.OrderExists ? "block" : "none")">
                <div class="order-gift-card-header row">
                    <h2 class="text-uppercase">YOUR ORDER</h2>
                    <h3>SubTtile</h3>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="col-sm-1">

                        </div>
                        <div class="col-sm-7">
                            <div class="row gc-payt-name-header">
                                <label class="col-sm-12">OVERVIEW</label>
                            </div>
                            <div class="row gc-payt-items-section">
                                <div class="gc-payt-items-holder col-sm-12">
                                    @{
                                        if (Model.OrderExists)
                                        {
                                            foreach (var giftcard in Model.OrderGiftCards)
                                            {
                                    <div class="row">
                                        <div class="col-sm-4">
                                            @giftcard.Title
                                        </div>
                                        <div class="col-sm-4">
                                            @giftcard.Name
                                        </div>
                                        <div class="col-sm-4">
                                            @giftcard.Value
                                        </div>
                                    </div>
                                            }
                                    <div class="row">
                                        <div class="col-sm-4">
                                        </div>
                                        <div class="col-sm-4 gc-total">
                                            Total:
                                        </div>
                                        <div class="col-sm-4">
                                            @Model.OrderTotal.ToString()
                                        </div>
                                    </div>
                                        }
                                    }
                                </div>
                            </div>
                            <div class="row gc-payt-method">
                                <div class="col-xs-12 col-sm-12">

                                    <h3>@Resources.Scottybons.ScottybonsDataStrings.ConfirmYourOrderModel_CompleteOutfit_Complete_Chooseapaymentmethod_</h3>
                                    <div class="checkbox">
                                        @if (ViewBag.PaymentTypes != null)
                                        {
                                            foreach (var paymentTypes in ViewBag.PaymentTypes as List<SelectListItem>)
                                            {
                                        @Html.RadioButton("paymentvendor", paymentTypes.Value, paymentTypes.Selected, new { @class = "vendortype" })
                                        <label class="paymentTypes-type" for="@paymentTypes.Value">@paymentTypes.Text</label>
                                            }
                                        }
                                    </div>
                                    <h5></h5>
                                    <h3>@Resources.Scottybons.ScottybonsDataStrings.PaymentGatewaySelectIssuer</h3>
                                    <div class="checkbox">
                                        @if (ViewBag.IssuerTypes != null)
                                        {
                                            foreach (var iTypes in ViewBag.IssuerTypes as List<SelectListItem>)
                                            {
                                        @Html.RadioButton("paymentbank", iTypes.Value, false, new { @class = "issuer-bank-type" })
                                        <label class="paymentTypes-type" for="@iTypes.Value">@iTypes.Text</label>
                                            }

                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="row gc-payt-order-action back-next-wizard">
                                <div class="col-sm-4">
                                    <button type="button" class="btn btn-primary btn-wizard-back float-left" onclick="BackToWizard(this)">Back</button>
                                </div>
                                <div class="col-sm-8">
                                    <button class="btn btn-default btn-gc-payment-order float-right" onclick="ProceedToConfirmation(this);">Make payment</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="order-gift-card-payment-status gift-card-wizard" style="display:none">

                <div class="order-gift-card-success-status">
                    <div class="order-gift-card-header row">
                        <h2 class="text-uppercase">Thanks for your order</h2>
                    </div>

                    <div class="row col-sm-12">
                        <div class="col-sm-1">

                        </div>
                        <div class="col-sm-10 order-gc-success-content">

                        </div>
                        <div class="col-sm-1">

                        </div>
                    </div>
                    <div class="row col-sm-12">
                        <div class="col-sm-1">

                        </div>
                        <div class="col-sm-10 order-gc-success-img-content">
                            <img src="~/Images/GiftcardSuccess.jpg" alt="success" />
                        </div>
                        <div class="col-sm-1">

                        </div>
                    </div>
                </div>

                <div class="order-gift-card-failure-status">
                    <div class="order-gift-card-header row">
                        <h2 class="text-uppercase">There was something wrong with your payment</h2>
                    </div>
                    <div class="row col-sm-12">
                        <div class="col-sm-1">

                        </div>
                        <div class="col-sm-10 order-gc-failure-content">

                        </div>
                        <div class="col-sm-1">

                        </div>
                    </div>
                    <div class="row col-sm-12">
                        <div class="col-sm-1">

                        </div>
                        <div class="col-sm-10 no-padding">
                            <div class="gc-payt-order-action back-next-wizard text-center">
                                <div>
                                    <button type="button" class="btn btn-primary btn-wizard-back" onclick="BackToWizard(this)">Back To Payment</button>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-1">

                        </div>
                    </div>
                </div>
            </div>
        }else
        {
            if (Model.OrderStatus)
            {
                <div class="order-gift-card-payment-status gift-card-wizard" style="display:block">

                    <div class="order-gift-card-success-status">
                        <div class="order-gift-card-header row">
                            <h2 class="text-uppercase">Thanks for your order</h2>
                        </div>

                        <div class="row col-sm-12">
                            <div class="col-sm-1">

                            </div>
                            <div class="col-sm-10 order-gc-success-content">
                                @Model.OrderNumber
                            </div>
                            <div class="col-sm-1">

                            </div>
                        </div>
                        <div class="row col-sm-12">
                            <div class="col-sm-1">

                            </div>
                            <div class="col-sm-10 order-gc-success-img-content">
                                <img src="~/Images/GiftcardSuccess.jpg" alt="success" />
                            </div>
                            <div class="col-sm-1">

                            </div>
                        </div>
                    </div>                    
                </div>
            }
            else
            {
                <div class="order-gift-card-payment gift-card-wizard" style="display:none">
                    <div class="order-gift-card-header row">
                        <h2 class="text-uppercase">YOUR ORDER</h2>
                        <h3>SubTtile</h3>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="col-sm-1">

                            </div>
                            <div class="col-sm-7">
                                <div class="row gc-payt-name-header">
                                    <label class="col-sm-12">OVERVIEW</label>
                                </div>
                                <div class="row gc-payt-items-section">
                                    <div class="gc-payt-items-holder col-sm-12">
                                        @{
                                            if (Model.OrderExists)
                                            {
                                                foreach (var giftcard in Model.OrderGiftCards)
                                                {
                                        <div class="row">
                                            <div class="col-sm-4">
                                                @giftcard.Title
                                            </div>
                                            <div class="col-sm-4">
                                                @giftcard.Name
                                            </div>
                                            <div class="col-sm-4">
                                                @giftcard.Value
                                            </div>
                                        </div>
                                                }
                                        <div class="row">
                                            <div class="col-sm-4">
                                            </div>
                                            <div class="col-sm-4 gc-total">
                                                Total:
                                            </div>
                                            <div class="col-sm-4">
                                                @Model.OrderTotal.ToString()
                                            </div>
                                        </div>
                                            }
                                        }
                                    </div>
                                </div>
                                <div class="row gc-payt-method">
                                    <div class="col-xs-12 col-sm-12">

                                        <h3>@Resources.Scottybons.ScottybonsDataStrings.ConfirmYourOrderModel_CompleteOutfit_Complete_Chooseapaymentmethod_</h3>
                                        <div class="checkbox">
                                            @if (ViewBag.PaymentTypes != null)
                                            {
                                                foreach (var paymentTypes in ViewBag.PaymentTypes as List<SelectListItem>)
                                                {
                                            @Html.RadioButton("paymentvendor", paymentTypes.Value, paymentTypes.Selected, new { @class = "vendortype" })
                                            <label class="paymentTypes-type" for="@paymentTypes.Value">@paymentTypes.Text</label>
                                                }
                                            }
                                        </div>
                                        <h5></h5>
                                        <h3>@Resources.Scottybons.ScottybonsDataStrings.PaymentGatewaySelectIssuer</h3>
                                        <div class="checkbox">
                                            @if (ViewBag.IssuerTypes != null)
                                            {
                                                foreach (var iTypes in ViewBag.IssuerTypes as List<SelectListItem>)
                                                {
                                            @Html.RadioButton("paymentbank", iTypes.Value, false, new { @class = "issuer-bank-type" })
                                            <label class="paymentTypes-type" for="@iTypes.Value">@iTypes.Text</label>
                                                }

                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="row gc-payt-order-action back-next-wizard">                                    
                                    <div class="col-sm-8">
                                        <button class="btn btn-default btn-gc-payment-order float-right" onclick="ReOrderToConfirmation(this);">Make payment</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="order-gift-card-payment-status gift-card-wizard" style="display:block">                

                    <div class="order-gift-card-failure-status">
                        <div class="order-gift-card-header row">
                            <h2 class="text-uppercase">There was something wrong with your payment</h2>
                        </div>
                        <div class="row col-sm-12">
                            <div class="col-sm-1">

                            </div>
                            <div class="col-sm-10 order-gc-failure-content">

                            </div>
                            <div class="col-sm-1">

                            </div>
                        </div>
                        <div class="row col-sm-12">
                            <div class="col-sm-1">

                            </div>
                            <div class="col-sm-10 no-padding">
                                <div class="gc-payt-order-action back-next-wizard text-center">
                                    <div>
                                        <button type="button" class="btn btn-primary btn-wizard-back" onclick="BackToWizard(this)">Back To Payment</button>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-1">

                            </div>
                        </div>
                    </div>
                </div>
            }
        }

    </div>

    <div class="row order-gift-card-copy" style="display:none">
        <div class="row gift-card-actions padding-bottom-1ptg">
            <div class="col-sm-12">
                <div class="col-sm-10">
                    <label class="lbl-want-gift-card"><input type="checkbox" class="chk-want-gift-card" onclick="ManageGiftCardStatus(this)" />I want to order a gift card</label>
                </div>
                <div class="col-sm-2">
                    <button type="button" class="btn btn-default btn-xs btn-danger float-right" onclick="RemoveGiftCard(this)">
                        <span class="glyphicon glyphicon glyphicon-remove gift-card-glyphicon-remove"></span>
                    </button>
                </div>

            </div>
        </div>

        <div class="row gift-card-value-section padding-bottom-1ptg">
            <div class="col-sm-12">
                <div class="col-sm-4">
                    <label class="">Value</label>
                </div>
                <div class="col-sm-8">
                    <div class="required-field-error-holder" style="display:none;">
                        <label class="required-field-error float-right">Value must be greater than 25.</label>
                    </div>
                    <div class="col-sm-12 no-padding">
                        <div class="col-sm-9 no-padding padding-right-1ptg">
                            <select class="manage-state form-control sel-prices" onchange="SelPrizesOnChange(this)">
                                <option value="1">$25</option>
                                <option value="2">$100</option>
                                <option value="3">$200</option>
                                <option value="4">$500</option>
                                <option value="5">Other</option>
                            </select>
                        </div>
                        <div class="col-sm-3 no-padding">
                            <input type="number" min="25" class="manage-state form-control gift-card-other-value" disabled="disabled" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row gift-card-forwhom-section padding-bottom-1ptg">

            <div class="col-sm-12">
                <div class="col-sm-4">
                    <label class="">For Whom</label>
                </div>
                <div class="col-sm-8">
                    <input type="text" class="manage-state form-control gift-card-for-whom float-right" placeholder="First Name" />
                </div>
            </div>
        </div>
        <div class="row gift-card-permsg-section padding-bottom-1ptg ">

            <div class="col-sm-12">
                <div class="col-sm-4">
                    <label class="">Personal message:</label>
                </div>
                <div class="col-sm-8">
                    <textarea class="manage-state form-control gift-card-personal-msg float-right" maxlength="50" rows="2" placeholder="Max 50 characters"></textarea>
                </div>
            </div>
        </div>
        <div class="row padding-bottom-1ptg padding-top-1ptg">
            <div class="col-sm-2">

            </div>
            <div class="col-sm-8 gift-card-row-separator">

            </div>
            <div class="col-sm-2">

            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    var giftCards = []; var priceValueIndicator = "EURO"; var ShipmentDetails = {}; var isGuest = false; var email = "";

    function CheckDeliveryAddressField() {

        $('.gc-deladdr-field').each(function (index, ctrl) {
            $(ctrl).focusout(function () {
                if ($(this).val().trim() == "") {
                    if (!$(this).hasClass('required-field')) {
                        $(this).addClass('required-field');
                    }
                } else {
                    $(this).removeClass('required-field');
                }
            });
        });
    }

    function AddGiftCard(ele) {
        var cloneDiv = $('div.order-gift-card-copy:last').clone();
        var giftCardsCount = $('div.order-gift-card-copy').length;

        var giftCardIndexClass = 'gift-card-' + giftCardsCount;
        $(cloneDiv).addClass(giftCardIndexClass).addClass('valid-gift-card').find('input[type="checkbox"]').prop('checked', true);

        $(cloneDiv).find('input.gift-card-other-value:eq(0)').focusout(function () {
            if ($(this).val().trim() != "") {
                if (parseInt($(this).val()) < 25) {
                    $(this).addClass('min-required-field');
                    $(this).closest('div.order-gift-card-copy').find('div.required-field-error-holder:eq(0)').slideDown('slow');
                } else {
                    $(this).removeClass('min-required-field');
                    $(this).removeClass('required-field');
                    $(this).closest('div.order-gift-card-copy').find('div.required-field-error-holder:eq(0)').slideUp('slow');
                }
            } else {
                $(this).removeClass('min-required-field');
                $(this).closest('div.order-gift-card-copy').find('div.required-field-error-holder:eq(0)').slideUp('slow');
            }
        });

        $('.gift-cards-section').append(cloneDiv);
        $(cloneDiv).show();
        $(ele).prop('checked', false);

        if ($('div.order-gift-card-copy').length > 0) {
            $('.btn-wizard-next').show();
        }
    }

    function RemoveGiftCard(ele) {
        $(ele).closest('div.order-gift-card-copy').remove();

        if ($('div.order-gift-card-copy').length > 1) {
            $('.btn-wizard-next').show();
        } else {
            $('.btn-wizard-next').hide();
        }
    }

    function SelPrizesOnChange(ctrl) {
        if ($(ctrl).find('option:selected').text().toLowerCase() == 'other') {
            $(ctrl).closest('div.gift-card-value-section').find('input.gift-card-other-value').prop('disabled', false);
        } else {
            $(ctrl).closest('div.gift-card-value-section').find('div.required-field-error-holder:eq(0)').slideUp('slow');
            $(ctrl).closest('div.gift-card-value-section').find('input.gift-card-other-value').prop('disabled', true);
            $(ctrl).closest('div.gift-card-value-section').find('input.gift-card-other-value:eq(0)').removeClass('required-field');
            $(ctrl).closest('div.gift-card-value-section').find('input.gift-card-other-value:eq(0)').removeClass('min-required-field');
        }
    }

    function ManageGiftCardStatus(ctrl) {
        if ($(ctrl).is(':checked')) {

            $(ctrl).closest('div.order-gift-card-copy').addClass('valid-gift-card');

            $(ctrl).closest('div.order-gift-card-copy').find('.manage-state').prop('disabled', false);

            if ($(ctrl).closest('div.order-gift-card-copy').find('select.sel-prices').find('option:selected').text().toLowerCase() == 'other') {
                $(ctrl).closest('div.order-gift-card-copy').find('input.gift-card-other-value').prop('disabled', false);
                if ($(ctrl).closest('div.order-gift-card-copy').find('input.gift-card-other-value').val().trim() == "") {
                    $(ctrl).closest('div.order-gift-card-copy').find('input.gift-card-other-value').addClass('required-field');
                    $(ctrl).closest('div.order-gift-card-copy').find('input.gift-card-other-value:eq(0)').focus();
                } else {
                    if (parseInt($(ctrl).closest('div.order-gift-card-copy').find('input.gift-card-other-value').val()) < 25) {
                        if (!$(ctrl).closest('div.order-gift-card-copy').find('input.gift-card-other-value:eq(0)').hasClass('min-required-field')) {
                            $(ctrl).closest('div.order-gift-card-copy').find('input.gift-card-other-value').addClass('min-required-field');
                            $(ctrl).closest('div.order-gift-card-copy').find('div.required-field-error-holder:eq(0)').slideDown('slow');
                        }
                    }
                }

            } else {
                $(ctrl).closest('div.order-gift-card-copy').find('input.gift-card-other-value').removeClass('required-field');
                $(ctrl).closest('div.order-gift-card-copy').find('input.gift-card-other-value').removeClass('min-required-field');
                $(ctrl).closest('div.order-gift-card-copy').find('input.gift-card-other-value').prop('disabled', true);
            }

        } else {

            $(ctrl).closest('div.order-gift-card-copy').removeClass('valid-gift-card');
            $(ctrl).closest('div.order-gift-card-copy').find('.manage-state').prop('disabled', true);
            $(ctrl).closest('div.order-gift-card-copy').find('input.gift-card-other-value').removeClass('required-field');
            $(ctrl).closest('div.order-gift-card-copy').find('input.gift-card-other-value').removeClass('min-required-field');
            $(ctrl).closest('div.order-gift-card-copy').find('div.required-field-error-holder:eq(0)').slideUp('slow');
        }

        if ($('.chk-want-gift-card:checked').length > 0) {
            $('.btn-add-gift-card').slideDown('slow');
        } else {
            $('.btn-add-gift-card').slideUp('slow');
        }
    }

    function ProceedToLoginOrAddress(ctrl) {
        var otherValueEmpty = false; var otherValueMinCheck = false;
        $('.chk-want-gift-card:checked').each(function (index, ele) {
            //if (!otherValueEmpty ) {
            if ($(ele).closest('div.order-gift-card-copy').find('select.sel-prices').find('option:selected').text().toLowerCase() == 'other') {
                if ($(ele).closest('div.order-gift-card-copy').find('input.gift-card-other-value:eq(0)').val().trim() == "") {
                    otherValueEmpty = true;
                    $(ele).closest('div.order-gift-card-copy').find('input.gift-card-other-value:eq(0)').addClass('required-field');
                    //return;
                } else {
                    if (parseInt($(ele).closest('div.order-gift-card-copy').find('input.gift-card-other-value:eq(0)').val()) < 25) {
                        otherValueMinCheck = true;
                        if (!$(ele).closest('div.order-gift-card-copy').find('input.gift-card-other-value:eq(0)').hasClass('min-required-field')) {
                            $(ele).closest('div.order-gift-card-copy').find('input.gift-card-other-value:eq(0)').addClass('min-required-field');
                            $(ele).closest('div.order-gift-card-copy').find('div.required-field-error-holder:eq(0)').slideDown('slow');
                        }
                    } else {
                        $(ele).closest('div.order-gift-card-copy').find('input.gift-card-other-value:eq(0)').removeClass('min-required-field');
                        $(ele).closest('div.order-gift-card-copy').find('input.gift-card-other-value:eq(0)').removeClass('required-field');
                        $(ele).closest('div.order-gift-card-copy').find('div.required-field-error-holder:eq(0)').slideUp('slow');
                    }
                }
            }
            //}
        });

        if (otherValueEmpty) {
            //alert('check the required fields.');
            $('.gcfields-required-error').slideDown('slow');
            $('.required-field:eq(0)').focus();
            return;
        } else if (otherValueMinCheck) {
            $('.gcfields-required-error').slideUp('slow');
            $('.min-required-field:eq(0)').focus();
            //alert('value should be grater than 25');
            return;
        }

        $(ctrl).closest('div.gift-card-wizard').slideUp('slow');
        $(ctrl).closest('div.gift-card-wizard').next().slideDown('slow');
    }

    function ProceedToDelivery(ctrl, isLoginUser) {
        var ctrlValid = true;
        isGuest = false;

        $('.gc-login-required-error').slideUp('slow');
        $('.gc-login-valid-error').slideUp('slow');

        email = ($('.loggedin-user').val().toLowerCase() == "true") ? $('.loggedin-user-email').val() : $('.gift-card-login-emailaddress').val();

        ctrlValid = ($(ctrl).closest('div.gift-card-login').find('input.gc-emailaddress:eq(0)').val().trim() != "");

        if (ctrlValid) {

            if (!isValidEmailAddress($(ctrl).closest('div.gift-card-login').find('input.gc-emailaddress:eq(0)'))) {
                FocusControlRequiredError($(ctrl).closest('div.gift-card-login').find('input.gc-emailaddress:eq(0)'));
                $('.gc-login-valid-error').slideDown('slow');
                //alert('please enter valid email.')
                return;
            }
            $('.gc-login-valid-error').slideUp('slow');
            RemoveControlError($(ctrl).closest('div.gift-card-login').find('input.gc-emailaddress:eq(0)'));

            ctrlValid = ($(ctrl).closest('div.gift-card-login').find('input.gc-password:eq(0)').val().trim() != "");

            if (!ctrlValid)
                FocusControlRequiredError($(ctrl).closest('div.gift-card-login').find('input.gc-password:eq(0)'));

        } else {
            FocusControlRequiredError($(ctrl).closest('div.gift-card-login').find('input.gc-emailaddress:eq(0)'));
        }

        if (ctrlValid) {

            RemoveControlError($(ctrl).closest('div.gift-card-login').find('input.gc-password:eq(0)'));
            RemoveControlError($(ctrl).closest('div.gift-card-login').find('input.gc-emailaddress:eq(0)'));
            $('.gc-login-required-error').slideUp('slow');
            $('.gc-login-valid-error').slideUp('slow');
            //login
            var model = {
                Email: $(ctrl).closest('div.gift-card-login').find('input.gc-emailaddress:eq(0)').val(),
                Password: $(ctrl).closest('div.gift-card-login').find('input.gc-password:eq(0)').val()
            }

            $.ajax({
                url: '/ScottyBonsPhase2Test/umbraco/surface/Promotions/Login/',
                data: JSON.stringify(model),
                type: 'POST',
                async: false,
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data.Status) {
                        $(ctrl).closest('div.gift-card-wizard').slideUp('slow');
                        $(ctrl).closest('div.gift-card-wizard').next().slideDown('slow');
                        $(ctrl).closest('div.login-gift-card-section').remove();
                        $('.gc-payersaddr-firstname').val(data.FirstName).prop('disabled', true);
                        $('.gc-payersaddr-lastname').val(data.LastName).prop('disabled', true);
                        CheckDeliveryAddressField();
                    } else {
                        alert(data.ErrorMsg);
                    }
                },
                error: function () {
                    alert('Error');
                }
            });
        } else {
            //alert('Please fill the details.')
            $('.gc-login-required-error').slideDown('slow');
        }
    }

    function ProceedToDeliveryAsGuest(ctrl) {
        var ctrlValid = true;
        isGuest = true;

        $('.gc-loginguest-valid-error').slideUp('slow');
        $('.gc-loginguest-required-error').slideUp('slow');

        email = ($('.loggedin-user').val().toLowerCase() == "true") ? $('.loggedin-user-email').val() : $('.gift-card-login-guest-emailaddress').val();

        ctrlValid = ($(ctrl).closest('div.gift-card-login').find('input.gc-emailaddress:eq(0)').val().trim() != "");

        if (!ctrlValid) {
            FocusControlRequiredError($(ctrl).closest('div.gift-card-login').find('input.gc-emailaddress:eq(0)'));
        } else {

            if (!isValidEmailAddress($(ctrl).closest('div.gift-card-login').find('input.gc-emailaddress:eq(0)'))) {
                FocusControlRequiredError($(ctrl).closest('div.gift-card-login').find('input.gc-emailaddress:eq(0)'));
                $('.gc-loginguest-valid-error').slideDown('slow');
                //alert('please enter valid email.')
                return;
            }
            $('.gc-loginguest-valid-error').slideUp('slow');
            RemoveControlError($(ctrl).closest('div.gift-card-login').find('input.gc-emailaddress:eq(0)'));
        }

        if (ctrlValid) {

            $(ctrl).closest('div.gift-card-login').find('input.gc-emailaddress').each(function (index, ele) {
                RemoveControlError(ele);
            });

            $(ctrl).closest('div.gift-card-wizard').slideUp('slow');
            $(ctrl).closest('div.gift-card-wizard').next().slideDown('slow');

            $('.gc-loginguest-required-error').slideUp('slow');

        } else {
            //alert('Please fill the details.')
            $('.gc-loginguest-required-error').slideDown('slow');
        }

        CheckDeliveryAddressField();
    }
    var total = 0;
    function ProceedToPayment(ctrl) {

        giftCards.length = 0;
        email = ($('.loggedin-user').val().toLowerCase() == "true") ? $('.loggedin-user-email').val() : email;

        var valid = $('.gc-deladdr-field').filter(function (index, ele) { return $(ele).val().trim() == ""; }).length == 0;

        if (!valid) {
            var setFocus = false;
            $('.gc-deladdr-field').filter(function (index, ele) {
                if ($(ele).val().trim() == "") {
                    if (!setFocus) {
                        setFocus = true;
                        $(ele).focus();
                    }
                    $(ele).addClass('required-field');
                } else {
                    $(ele).removeClass('required-field');
                }
            });

            //alert('please fill delivery address');
            $('.gc-addr-required-error').slideDown('slow');
            return;
        }

        $('.gc-addr-required-error').slideUp('slow');

        $('.gc-payt-items-holder').empty();
        total = 0;

        $('.valid-gift-card').each(function (index, ele) {
            var giftCardObject = {};
            giftCardObject.Title = "Gift Card";
            giftCardObject.Name = $(ele).find('input.gift-card-for-whom:eq(0)').val();
            giftCardObject.PersonalMessage = $(ele).find('textarea.gift-card-personal-msg:eq(0)').val();

            var cardValueSelectEle = $(ele).find('select.sel-prices:eq(0)');

            if ($(cardValueSelectEle).find('option:selected').text().toLowerCase() == "other") {

                giftCardObject.Value = $(ele).find('input.gift-card-other-value').val() + " " + priceValueIndicator;
                total += parseFloat($(ele).find('input.gift-card-other-value').val());
            } else {

                giftCardObject.Value = $(cardValueSelectEle).find('option:selected').text().replace('$', '') + " " + priceValueIndicator;
                total += parseFloat($(cardValueSelectEle).find('option:selected').text().replace('$', ''));
            }
            giftCards.push(giftCardObject);

            var giftCardRow = $('<div>').addClass('row');
            var titleColDiv = giftCardRow.append($('<div>').addClass('col-sm-4').append(giftCardObject.Title));
            var nameColDiv = giftCardRow.append($('<div>').addClass('col-sm-4').append(giftCardObject.Name));
            var valueColDiv = giftCardRow.append($('<div>').addClass('col-sm-4').append(giftCardObject.Value));
            $('.gc-payt-items-holder').append(giftCardRow);

        });

        var totalGiftCardRow = $('<div>').addClass('row');
        totalGiftCardRow.append($('<div>').addClass('col-sm-4'));
        totalGiftCardRow.append($('<div>').addClass('col-sm-4 gc-total').append('Total: '));
        totalGiftCardRow.append($('<div>').addClass('col-sm-4 gc-total-value').append(total + " " + priceValueIndicator));
        $('.gc-payt-items-holder').append(totalGiftCardRow);

        ShipmentDetails.Email = email;
        ShipmentDetails.PayersFirstName = $('.gc-payersaddr-firstname').val();
        ShipmentDetails.PayersLastName = $('.gc-payersaddr-lastname').val();
        ShipmentDetails.FirstName = $('.gc-addr-deladd-firstname').val();
        ShipmentDetails.LastName = $('.gc-addr-deladd-lastname').val();
        ShipmentDetails.StreetName = $('.gc-addr-streetname').val();
        ShipmentDetails.HouseNumber = $('.gc-addr-housenumber').val();
        ShipmentDetails.PostalCode = $('.gc-addr-post').val();
        ShipmentDetails.City = $('.gc-addr-city').val();
        ShipmentDetails.Country =parseInt($('.gc-addr-country').val());

        $(ctrl).closest('div.gift-card-wizard').slideUp('slow');
        $(ctrl).closest('div.gift-card-wizard').next().slideDown('slow');
    }



    function ProceedToConfirmation(ctrl) {
        if ($('.issuer-bank-type:checked').length == 0) {
            alert('Please select the issuer to proceed.');
            return;
        } else {//Make Payment

            var model = {};
            model.GiftCards = giftCards;
            model.Email = email;
            model.IsGuest = isGuest;
            model.ShipmentDetails = ShipmentDetails;
            model.VendorId = parseInt($('.vendortype:checked').val());
            model.IssuerType = $('.issuer-bank-type:checked').val();
            model.OrderTotal = total;
            $.ajax({
                url: '/ScottyBonsPhase2Test/umbraco/surface/Promotions/HandleGiftCardsAction/',
                data: JSON.stringify(model),
                type: 'POST',
                async: false,
                contentType: 'application/json; charset=utf-8',
                success: function (result) {
                    window.location.href = result.PaymentUrl;                   
                },
                error: function () {
                    alert('Error');
                }
            });
        }

    }

    function ReOrderToConfirmation(ctrl) {

        if ($('.issuer-bank-type:checked').length == 0) {
            alert('Please select the issuer to proceed.');
            return;
        } else {
            var model = {};
            model.VendorId = parseInt($('.vendortype:checked').val());
            model.IssuerType = $('.issuer-bank-type:checked').val();
            
            $.ajax({
                url: '/ScottyBonsPhase2Test/umbraco/surface/Promotions/HandleGiftCardsReOrderAction/',
                data: JSON.stringify(model),
                type: 'POST',
                async: false,
                contentType: 'application/json; charset=utf-8',
                success: function (result) {
                    window.location.href = result.PaymentUrl;
                },
                error: function () {
                    alert('Error');
                }
            });
        }
    }

    function getParameterByName(name, url) {

        if (!url) url = window.location.href;
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
    }

    function FocusControlRequiredError(ctrl) {
        $(ctrl).addClass('required-field');
        $(ctrl).focus();
    }

    function RemoveControlError(ctrl) {
        $(ctrl).removeClass('required-field');
    }

    function isValidEmailAddress(inputText) {
        if ($(inputText).val().trim() != "") {
            if (/^\w+([\.-]?\w+)*@@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test($(inputText).val())) {
                return true;
            }
            else {
                return false;
            }
        }
    }

    function BackToWizard(ctrl) {
        alert(window.getParameterByName("OrderID"));
        $(ctrl).closest('div.gift-card-wizard').prev().slideDown('slow').next().slideUp('slow');
    }
</script>