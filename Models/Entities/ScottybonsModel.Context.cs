//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ScottybonsMVC.Models.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ScottybonsEComEntities : DbContext
    {
        public ScottybonsEComEntities()
            : base("name=ScottybonsEComEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CountryMaster> CountryMasters { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<CustomerStatusMaster> CustomerStatusMasters { get; set; }
        public virtual DbSet<ErrorLog> ErrorLogs { get; set; }
        public virtual DbSet<EmailContent> EmailContents { get; set; }
        public virtual DbSet<NewsletterMailList> NewsletterMailLists { get; set; }
        public virtual DbSet<OrderItemReviewGeneralMaster> OrderItemReviewGeneralMasters { get; set; }
        public virtual DbSet<OrderItemReviewPriceMaster> OrderItemReviewPriceMasters { get; set; }
        public virtual DbSet<OrderItemReviewSizeMaster> OrderItemReviewSizeMasters { get; set; }
        public virtual DbSet<OrderItemReviewStyleMaster> OrderItemReviewStyleMasters { get; set; }
        public virtual DbSet<OrderItem> OrderItems { get; set; }
        public virtual DbSet<OrderItemStatusMaster> OrderItemStatusMasters { get; set; }
        public virtual DbSet<OrderShipping> OrderShippings { get; set; }
        public virtual DbSet<OrderStatusMaster> OrderStatusMasters { get; set; }
        public virtual DbSet<ForgotPassword> ForgotPasswords { get; set; }
        public virtual DbSet<OrderTransaction> OrderTransactions { get; set; }
        public virtual DbSet<PaymentTypeMaster> PaymentTypeMasters { get; set; }
        public virtual DbSet<PeriodicalScottyBoxMaster> PeriodicalScottyBoxMasters { get; set; }
        public virtual DbSet<OccasionForScottyBoxMaster> OccasionForScottyBoxMasters { get; set; }
        public virtual DbSet<PasswordLog> PasswordLogs { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<History> Histories { get; set; }
        public virtual DbSet<StyleProfileQuestion> StyleProfileQuestions { get; set; }
        public virtual DbSet<AnswerTypeofControl> AnswerTypeofControls { get; set; }
        public virtual DbSet<OrderIcePayTransaction> OrderIcePayTransactions { get; set; }
        public virtual DbSet<CustomerAnswer> CustomerAnswers { get; set; }
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<Article> Articles { get; set; }
        public virtual DbSet<ArticleColor> ArticleColors { get; set; }
        public virtual DbSet<ArticlePhoto> ArticlePhotos { get; set; }
        public virtual DbSet<ArticleSKU> ArticleSKUs { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<Brand> Brands { get; set; }
        public virtual DbSet<BudgetMaster> BudgetMasters { get; set; }
        public virtual DbSet<BudgetOptionMaster> BudgetOptionMasters { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<ColarTypeMaster> ColarTypeMasters { get; set; }
        public virtual DbSet<ColorCategoryMaster> ColorCategoryMasters { get; set; }
        public virtual DbSet<ColorPalletMaster> ColorPalletMasters { get; set; }
        public virtual DbSet<ColorSubCategoryMaster> ColorSubCategoryMasters { get; set; }
        public virtual DbSet<ComfortMaster> ComfortMasters { get; set; }
        public virtual DbSet<CustomerTypeForm> CustomerTypeForms { get; set; }
        public virtual DbSet<ExtravaganceMaster> ExtravaganceMasters { get; set; }
        public virtual DbSet<FigureMaster> FigureMasters { get; set; }
        public virtual DbSet<FitMaster> FitMasters { get; set; }
        public virtual DbSet<FootWidthMaster> FootWidthMasters { get; set; }
        public virtual DbSet<GenderMaster> GenderMasters { get; set; }
        public virtual DbSet<HeelHeightMaster> HeelHeightMasters { get; set; }
        public virtual DbSet<Language> Languages { get; set; }
        public virtual DbSet<MaterialMaster> MaterialMasters { get; set; }
        public virtual DbSet<MoodMaster> MoodMasters { get; set; }
        public virtual DbSet<PantsLengthMaster> PantsLengthMasters { get; set; }
        public virtual DbSet<PantsModelMaster> PantsModelMasters { get; set; }
        public virtual DbSet<PantsWaistMaster> PantsWaistMasters { get; set; }
        public virtual DbSet<SeasonMaster> SeasonMasters { get; set; }
        public virtual DbSet<SexynessMaster> SexynessMasters { get; set; }
        public virtual DbSet<ShoeMaterialMaster> ShoeMaterialMasters { get; set; }
        public virtual DbSet<SizeConsistencyMaster> SizeConsistencyMasters { get; set; }
        public virtual DbSet<SizeMaster> SizeMasters { get; set; }
        public virtual DbSet<SkirtLengthMaster> SkirtLengthMasters { get; set; }
        public virtual DbSet<SkirtWidthMaster> SkirtWidthMasters { get; set; }
        public virtual DbSet<SKUStatusMaster> SKUStatusMasters { get; set; }
        public virtual DbSet<SleeveLengthMaster> SleeveLengthMasters { get; set; }
        public virtual DbSet<StyleMaster> StyleMasters { get; set; }
        public virtual DbSet<Stylist> Stylists { get; set; }
        public virtual DbSet<StylistToolTransaction> StylistToolTransactions { get; set; }
        public virtual DbSet<SubCategory> SubCategories { get; set; }
        public virtual DbSet<SubCategoryProperty> SubCategoryProperties { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<SupplierContact> SupplierContacts { get; set; }
        public virtual DbSet<SupplierContactTypeMaster> SupplierContactTypeMasters { get; set; }
        public virtual DbSet<WaistFitMaster> WaistFitMasters { get; set; }
        public virtual DbSet<WearMomentMaster> WearMomentMasters { get; set; }
        public virtual DbSet<StyleProfileAnswer> StyleProfileAnswers { get; set; }
        public virtual DbSet<GiftCard> GiftCards { get; set; }
        public virtual DbSet<GiftCardStatu> GiftCardStatus { get; set; }
        public virtual DbSet<CustomerType> CustomerTypes { get; set; }
        public virtual DbSet<GiftCardOrderByType> GiftCardOrderByTypes { get; set; }
        public virtual DbSet<GiftCardRedemption> GiftCardRedemptions { get; set; }
        public virtual DbSet<GIftCardsOrder> GIftCardsOrders { get; set; }
        public virtual DbSet<GiftCardRedemptionStatu> GiftCardRedemptionStatus { get; set; }
        public virtual DbSet<OrderPeriodicSubscriptionDetail> OrderPeriodicSubscriptionDetails { get; set; }
        public virtual DbSet<PromoCodeOrder> PromoCodeOrders { get; set; }
    
        public virtual int sp_PerodicalScottyBox()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PerodicalScottyBox");
        }
    
        public virtual ObjectResult<OrderListInfo> GetOrders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OrderListInfo>("GetOrders");
        }
    
        public virtual ObjectResult<OrderDetailsInfo> GetCustomerDetailsByOrderID(Nullable<int> orderNumber)
        {
            var orderNumberParameter = orderNumber.HasValue ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OrderDetailsInfo>("GetCustomerDetailsByOrderID", orderNumberParameter);
        }
    
        public virtual int IsCustomerAnsweredAllRequiredQuestions(Nullable<int> customerId, string language)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var languageParameter = language != null ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IsCustomerAnsweredAllRequiredQuestions", customerIdParameter, languageParameter);
        }
    }
}
