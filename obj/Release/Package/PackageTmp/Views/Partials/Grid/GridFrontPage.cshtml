@using Newtonsoft.Json.Linq
@inherits UmbracoViewPage<dynamic>

@if (Model != null && Model.sections != null)
{
    var oneColumn = ((System.Collections.ICollection)Model.sections).Count == 1;

    <div class="umb-grid">
        @if (oneColumn)
        {
            foreach (var section in Model.sections)
            {
                <div class="grid-section">
                    @foreach (var row in section.rows)
                    {
                        @renderRow(row, true);
                    }
                </div>
            }
        }
        else
        {
            <div class="container">
                <div class="row clearfix">
                    @foreach (var s in Model.sections)
                    {
                        <div class="grid-section">
                            <div class="col-md-@s.grid column">
                                @foreach (var row in s.rows)
                                {
                                    @renderRow(row, false);
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
}
@helper renderRow(dynamic row, bool singleColumn)
{
    <div @RenderElementAttributes(row)>
        @{
            string pageTitle = Request.RawUrl.Replace("/", "").Replace("-", "").Replace(" ", "");
            string pageNameAsClass = string.IsNullOrEmpty(pageTitle) ? "home" : pageTitle;

            string rowContentType = (row.name == null ? string.Empty : row.name.Value);
            rowContentType = rowContentType.Replace("/", "and").Replace(".", "").Replace(" ", "");

            string className = string.Format("{0}-{1}", pageNameAsClass, rowContentType);

            @Umbraco.If(singleColumn, "<div class='container " + className + "'>")
            <div class="row clearfix">
                @foreach (var area in row.areas)
                {
                    string colName = string.Format("{0}-content", rowContentType);
                    <div class="col-md-@area.grid column @colName">
                        <div @RenderElementAttributes(area)>
                            @foreach (var control in area.controls)
                            {
                                if (control != null && control.editor != null && control.editor.view != null)
                                {
                                    <text>@Html.Partial("grid/editors/base", (object)control)</text>
                                }
                            }
                        </div>
                    </div>}
            </div>
            @Umbraco.If(singleColumn, "</div>")
        }
    </div>
}

@functions
{

    public static MvcHtmlString RenderElementAttributes(dynamic contentItem)
    {
        var attrs = new List<string>();
        JObject cfg = contentItem.config;

        if (cfg != null)
        {
            foreach (JProperty property in cfg.Properties())
            {
                attrs.Add(property.Name + "='" + property.Value.ToString() + "'");
            }
        }

        JObject style = contentItem.styles;

        if (style != null)
        {
            var cssVals = new List<string>();
            foreach (JProperty property in style.Properties())
            {
                cssVals.Add(property.Name + ":" + property.Value.ToString() + ";");
            }

            if (cssVals.Any())
            {
                attrs.Add("style='" + string.Join(" ", cssVals) + "'");
            }
        }

        return new MvcHtmlString(string.Join(" ", attrs));
    }
}